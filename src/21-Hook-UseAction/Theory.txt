const [state, formAction, isPending] = useActionState(actionFunction, initialState);

1. actionFunction:The function to be called when the form is submitted or button pressed. When the function is called it will receive
two parameter "previous state" and "form data",
prevState :Last state value (e.g. message, error), 
formData: Contains all the form inputs

2. initialState: woh value hai jo form submit hone se pehle state ka default value hota hai.
Jaise hi form first time submit hota hai, React uske baad initialState ko ignore kar deta hai.
Ismein tum koi bhi simple value de sakte ho — string, object, number, etc.

3. state:
*state wo jagah hai jahan tumhare action ka result store hota hai.
*Yaani user ne form bheja, server ne jo reply diya — wo state mein aata hai.
*Form submit hone ke baad jo message ya error dikhana hai, wo yahan aata hai.
🧠 Socho: "Thank you!" ya "Error: Please enter name"

4.formAction:
*formAction ek function hai jo tumhare <form> tag ke action attribute mein lagta hai.
*Jab form submit hota hai, yeh function tumhara "actionFunction" run karta hai.
🧠 Socho: Form ka “Start Engine” button hai ye.

5. isPending — Kaam chal raha hai ya nahi
*Jab form submit ho raha hota hai, ye true hota hai. Baaki time false.
🧠 Socho: Ek “Loading spinner” jo batata hai – "kaam abhi ho raha hai ya ho gaya".


------------------------------------------------------------------------------------------
🔍 Line Breakdown:
*state?.error
➤ This means: “If 'state' exists, and it has a property called 'error', give me its value.”
➤ The ?. is called optional chaining, so it avoids errors if state is undefined.

*&&
➤ This is a short-circuit AND. In JSX, it’s often used for conditional rendering.

*<span>{state?.error}</span>
➤ If the left side (state?.error) is truthy, React renders this <span> with the error message inside.

